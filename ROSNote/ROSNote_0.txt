查看ROS包路径
$ echo $ROS_PACKAGE_PATH
$ printenv | grep ROS
$ ps aux | grep ros

catkin编译方式：1) 编译单个功能包; 2)catkin_make
1) $ cd ~/catkin_ws && catkin_make --pkg <package>
2) $ cd ~/catkin_ws && catkin_make

  rosnode -h
$ rosnode list
$ rosnode info <node>
$ rosnode kill <node>
$ rosnode ping <node>

  rostopic -h
$ rostopic list
$ rostopic info <topic>
$ rostopic type <topic> %显示主题的消息类型
$ rostopic find <message> %按照消息类型查找主题
$ rostopic hz <topic> %显示主题的发布频率
$ rostopic bw <topic> %显示主题所使用带宽
$ rostopic echo <topic> %将消息输出到屏幕
$ rostopic pub -1 /turtle1/cmd_vel geometry_msgs/Twist -- '[2.0, 0.0, 0.0]' '[0.0, 0.0, 1.8]'
$ rostopic pub /turtle1/cmd_vel geometry_msgs/Twist -r 1 -- '[2.0, 0.0, 0.0]' '[0.0, 0.0, 1.8]'

  rosservice -h
$ rosservice list
$ rosservice info <service>
$ rosservice type <service> %显示服务的消息类型
$ rosservice find <message> %安装消息类型查找服务
$ rosservice call <service> <args>
$ rosservice uri <service> %输出服务的ROSRPC URI

  rosmsg -h
$ rosmsg list
$ rosmsg info <message>
$ rosmsg show <message>
$ rosmsg package <package> %列出包中的所有消息
$ rosmsg packages <message> %列出具有该消息的所有包

  rosbag -h
$ rosbag record -a
$ rosbag info <bag>
$ rosbag play <bag>

  rospack -h
$ rospack list 
$ rospack find <package>

% rosparam允许你储存和操作在ROS parameter server上的数据，parameter server可以储存整形，浮点型，布尔型，
% 字典型和链表型的数据．rosparam 使用YAML 审定语言以符合语法．简单的例子：YAML看起来十分自然，１是整形，
% 1.0是浮点型，one是字符串，true是布尔型，[1,2,3]是一列的整形，{a:b,c:d}是字典型，rosparam有许多命令可以
% 运行用在parameters上，如下所示：
$ rosparam list
$ rosparam set <parameter> <args>
$ rosparam get <parameter>
$ rosparam get /  %显示整个参数服务器的内容
$ rosparam load <file_name> <namespace>
$ rosparam dump <file_name> <namespace>
$ rosparam delete <parameter>
$ rosservice call clear %使修改生效
$ rosparam dump params.yaml
$ rosparam load params.yaml copy
$ rosparam get copy/background_b

创建ROS功能包
$ cd ~/catkin_ws/src
$ catkin_create_pkg <package> <dependency> ...
  eg. catkin_create_pkg new_package std_msgs roscpp
$ cd ~/catkin_ws && catkin_make

$ sudo apt-get install chrony %使计算机和机器人上的时钟与互联网服务器保持同步
$ sudo apt-get install ros-<distro>-rqt
$ sudo apt-get install ros-<distro>-rqt-common-plugins
$ rosrun rqt_reconfigure rqt_reconfigure %参数动态配置
$ rosrun rqt_graph rqt_graph
$ rosrun rqt_plot rqt_plot
$ (rosrun rqt_console) rqt_console
$ rosrun rqt_logger_level rqt_logger_level
$ rqt_bag <bag>

chmod a+x [.cfg] %.cfg文件需要手动修改权限和CMakeList.txt
节点的可执行文件在工作空间的devel/lib/<package>下
<collision>和<inertial>字段对于在Gazebo中运行的模型是必须的